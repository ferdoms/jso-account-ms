package com.jobseekerorganizer.accountms.domain;


import java.time.OffsetDateTime;
import java.util.Date;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGenerateStrategy;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedTimestamp;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.jobseekerorganizer.accountms.web.model.UserAccountDto;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;


@DynamoDBTable(tableName = "UserAccount")
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class UserAccount {
	@DynamoDBHashKey
	@DynamoDBAutoGeneratedKey
	private String id;
	
	@DynamoDBAttribute(attributeName = "fName")
	private String fname;

	@DynamoDBAttribute(attributeName = "lName")
	private String lname;
	
	// TODO possibly de-normalize
	@DynamoDBAttribute(attributeName = "email")
	private String email;

	@DynamoDBAttribute(attributeName = "password")
	private String password;
//	
//	@DynamoDBAttribute
//	private ProfileImage profileImage;
	
	@DynamoDBAutoGeneratedTimestamp(strategy=DynamoDBAutoGenerateStrategy.CREATE)
	private Date createdAt;
	
	@DynamoDBAutoGeneratedTimestamp(strategy=DynamoDBAutoGenerateStrategy.ALWAYS)
	private Date lastModifiedDate;
		
} 
